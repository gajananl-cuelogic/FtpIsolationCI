//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FtpWebApplication.FtpUserIsolationService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FtpUserIsolationService.IFtpUserIsolationService")]
    public interface IFtpUserIsolationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/SetNewFtpUser", ReplyAction="http://tempuri.org/IFtpUserIsolationService/SetNewFtpUserResponse")]
        string SetNewFtpUser(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/SetNewFtpUser", ReplyAction="http://tempuri.org/IFtpUserIsolationService/SetNewFtpUserResponse")]
        System.Threading.Tasks.Task<string> SetNewFtpUserAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/CreateUser", ReplyAction="http://tempuri.org/IFtpUserIsolationService/CreateUserResponse")]
        string CreateUser(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/CreateUser", ReplyAction="http://tempuri.org/IFtpUserIsolationService/CreateUserResponse")]
        System.Threading.Tasks.Task<string> CreateUserAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/CreateGroup", ReplyAction="http://tempuri.org/IFtpUserIsolationService/CreateGroupResponse")]
        string CreateGroup(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/CreateGroup", ReplyAction="http://tempuri.org/IFtpUserIsolationService/CreateGroupResponse")]
        System.Threading.Tasks.Task<string> CreateGroupAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/CreateFolder", ReplyAction="http://tempuri.org/IFtpUserIsolationService/CreateFolderResponse")]
        string CreateFolder(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/CreateFolder", ReplyAction="http://tempuri.org/IFtpUserIsolationService/CreateFolderResponse")]
        System.Threading.Tasks.Task<string> CreateFolderAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTJson", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTJsonResponse")]
        string TestRequestPOSTJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTJson", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTJsonResponse")]
        System.Threading.Tasks.Task<string> TestRequestPOSTJsonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestGETJson", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestGETJsonResponse")]
        string TestRequestGETJson();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestGETJson", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestGETJsonResponse")]
        System.Threading.Tasks.Task<string> TestRequestGETJsonAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestGETWithStringParamiterJson" +
            "", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestGETWithStringParamiterJson" +
            "Response")]
        string TestRequestGETWithStringParamiterJson(string TestStringParamiter1, string TestStringParamiter2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestGETWithStringParamiterJson" +
            "", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestGETWithStringParamiterJson" +
            "Response")]
        System.Threading.Tasks.Task<string> TestRequestGETWithStringParamiterJsonAsync(string TestStringParamiter1, string TestStringParamiter2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTXml", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTXmlResponse")]
        string TestRequestPOSTXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTXml", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTXmlResponse")]
        System.Threading.Tasks.Task<string> TestRequestPOSTXmlAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTWithObjectParamiterXml" +
            "", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTWithObjectParamiterXml" +
            "Response")]
        string TestRequestPOSTWithObjectParamiterXml(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation TestObjParamiter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTWithObjectParamiterXml" +
            "", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestPOSTWithObjectParamiterXml" +
            "Response")]
        System.Threading.Tasks.Task<string> TestRequestPOSTWithObjectParamiterXmlAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation TestObjParamiter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestGETXml", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestGETXmlResponse")]
        string TestRequestGETXml();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFtpUserIsolationService/TestRequestGETXml", ReplyAction="http://tempuri.org/IFtpUserIsolationService/TestRequestGETXmlResponse")]
        System.Threading.Tasks.Task<string> TestRequestGETXmlAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFtpUserIsolationServiceChannel : FtpWebApplication.FtpUserIsolationService.IFtpUserIsolationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FtpUserIsolationServiceClient : System.ServiceModel.ClientBase<FtpWebApplication.FtpUserIsolationService.IFtpUserIsolationService>, FtpWebApplication.FtpUserIsolationService.IFtpUserIsolationService {
        
        public FtpUserIsolationServiceClient() {
        }
        
        public FtpUserIsolationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FtpUserIsolationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FtpUserIsolationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FtpUserIsolationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SetNewFtpUser(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.SetNewFtpUser(UserDetails);
        }
        
        public System.Threading.Tasks.Task<string> SetNewFtpUserAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.SetNewFtpUserAsync(UserDetails);
        }
        
        public string CreateUser(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.CreateUser(UserDetails);
        }
        
        public System.Threading.Tasks.Task<string> CreateUserAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.CreateUserAsync(UserDetails);
        }
        
        public string CreateGroup(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.CreateGroup(UserDetails);
        }
        
        public System.Threading.Tasks.Task<string> CreateGroupAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.CreateGroupAsync(UserDetails);
        }
        
        public string CreateFolder(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.CreateFolder(UserDetails);
        }
        
        public System.Threading.Tasks.Task<string> CreateFolderAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation UserDetails) {
            return base.Channel.CreateFolderAsync(UserDetails);
        }
        
        public string TestRequestPOSTJson() {
            return base.Channel.TestRequestPOSTJson();
        }
        
        public System.Threading.Tasks.Task<string> TestRequestPOSTJsonAsync() {
            return base.Channel.TestRequestPOSTJsonAsync();
        }
        
        public string TestRequestGETJson() {
            return base.Channel.TestRequestGETJson();
        }
        
        public System.Threading.Tasks.Task<string> TestRequestGETJsonAsync() {
            return base.Channel.TestRequestGETJsonAsync();
        }
        
        public string TestRequestGETWithStringParamiterJson(string TestStringParamiter1, string TestStringParamiter2) {
            return base.Channel.TestRequestGETWithStringParamiterJson(TestStringParamiter1, TestStringParamiter2);
        }
        
        public System.Threading.Tasks.Task<string> TestRequestGETWithStringParamiterJsonAsync(string TestStringParamiter1, string TestStringParamiter2) {
            return base.Channel.TestRequestGETWithStringParamiterJsonAsync(TestStringParamiter1, TestStringParamiter2);
        }
        
        public string TestRequestPOSTXml() {
            return base.Channel.TestRequestPOSTXml();
        }
        
        public System.Threading.Tasks.Task<string> TestRequestPOSTXmlAsync() {
            return base.Channel.TestRequestPOSTXmlAsync();
        }
        
        public string TestRequestPOSTWithObjectParamiterXml(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation TestObjParamiter) {
            return base.Channel.TestRequestPOSTWithObjectParamiterXml(TestObjParamiter);
        }
        
        public System.Threading.Tasks.Task<string> TestRequestPOSTWithObjectParamiterXmlAsync(MicroServices.FtpUserIsolation.FtpUserIsolationService.Data.ClassFtpUserIsolation TestObjParamiter) {
            return base.Channel.TestRequestPOSTWithObjectParamiterXmlAsync(TestObjParamiter);
        }
        
        public string TestRequestGETXml() {
            return base.Channel.TestRequestGETXml();
        }
        
        public System.Threading.Tasks.Task<string> TestRequestGETXmlAsync() {
            return base.Channel.TestRequestGETXmlAsync();
        }
    }
}
